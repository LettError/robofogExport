"""Find all RoboFog sources in a directory and export them to UFO"""import os, macfsimport stringfrom FogUFOExport import FogUFOWriterclass UFOConverter:	def __init__(self, root=None):		self.root = root		self.fogSource = {}		self.count = 0			def collect(self, folder):		files = os.listdir(folder)		for f in files:			if f[0] == '.': continue			path = os.path.join(folder, f)			if os.path.isdir(path):				self.collect(path)			else:				(creator, type) = macfs.FSSpec(path).GetCreatorType()				if creator == "aCa2" and type == "aCf2":					self.fogSource[path] = 0		def convert(self):		for file in self.fogSource.keys():			f = OpenFont(file)			self.fogSource[file] = self.convertOne(f)			f.close(0)		def convertOne(self, font):		f = CurrentFont()		renameGlyphs = 1		flattenLib = 1		correctPath = 0		maxNameLen = 28		if f:			print "Exporting %s to UFO:"%f.name			fontName = string.split(f.name, '.')[0]			if fontName > maxNameLen-len(".ufo"):				#fontName = fontName[:maxNameLen-len(".ufo")-3]+string.zfill(self.count, 2)+".ufo"				# overwrite the previous file please.				fontName = fontName[:maxNameLen-len(".ufo")-3]+".ufo"				self.count = self.count + 1			ufoPath = os.path.join(os.path.dirname(f.path), fontName)			fw = FogUFOWriter(f, ufoPath, renameGlyphs=renameGlyphs, flattenLib=flattenLib, correctPath=correctPath)			return 1if __name__ == "__main__":	dir, ok = macfs.GetDirectory("Select a folder or volume with Fog sources.")	if ok:		ufoC = UFOConverter()		ufoC.collect(dir.as_pathname())		ufoC.convert()		print ufoC.fogSource